#+OPTIONS: toc:nil
#+OPTIONS: \n:t
#+OPTIONS: ^:{}

* 035 conflict

  バツは覚えた呪文を確かめるように， ~save stash~ を唱えた。

  #+BEGIN_QUOTE
  z z ⏎
  #+END_QUOTE

  #+BEGIN_SRC 
  Head:     primus Ate delicious lunch
  Merge:    origin/primus Merge pull request #17 from kaburaho/bottle

  stash@{0} On primus: 7d16fbf Ate delicious lunch
  #+END_SRC

  石はバツの隣に戻ってきた。

  「…はぁ」

  ひょいとそれを手にとり，再び投げる。地面をはね，コロコロと転がって止まった。

  過去を行き来できても，みんなを助けるために戻ってきても，自分は助けを求めることしかできない。自分にできることはこの小さな石を動かすことくらいなのだろうか。そんな無力感をまぎらわせるように，バツは剣にのせた指をすべらせた。

  #+BEGIN_QUOTE
  z p ⏎
  #+END_QUOTE

  #+BEGIN_SRC 
  GitError! Your local changes to the following files would be overwritten by merge:  [Type `$' for details]
  Head:     primus Ate delicious lunch
  Merge:    origin/primus Merge pull request #17 from kaburaho/bottle

  Unstaged changes (1)
  modified gardenl5/objects.map
  #+END_SRC

  石は戻ってこなかった。

  「あれ？」

  呪文を間違ったのかと，再度剣に指をのせる。

  『いや，これでいい』クロメが口を出す。『君が前とは違う場所に石を投げたから，その世界に戻れないんだ』

  「どういうこと？」『君が石を左に投げた世界と右に投げた世界は別物だってことさ』

  バツの頭にさらに疑問符が増える。

  黒い目が静止する。何か考えているように。やや間があって再び話しはじめる。

  『俺に Git を扱う力があれば，君にその違いを体験させることができるんだが』「うん」『身体をいったん分解してな』「ぜったいやだ」

  クロメはフッと笑い，続ける。

  『 ~stash~ には厄介なところがあってな，元の世界に一旦戻らないと，別の ~stash~ で作った世界に移動できん』

  「元の世界って？」『君が石を投げる前，何度も痛い思いをして記録 ( ~commit~ ) した世界のことだ』「ああ…」

  クロメがはじめに ~save stash~ を使ったのは偶然だった。死の寸前にあったバツを救うには時間がなかったからだ。ただ，失敗を繰り返しながら少しずつ進んでいくバツにとって， ~stash~ は相性の良い呪文だとも思っている。

  『 ~stash~ は俺でも君の身体を借りれば使えるくらい手軽なものだ。それゆえ制約もある。 ~commit~ とうまく使いわけるといい』

  クロメは説明を始めると長い。適度に相づちを打ちつつ，バツは転がった石をながめていた。

  <br>

  私が知りたいのは Git の仕組みじゃなくて，過去を変える方法なんだ。

  <br>

  「ねえ」得意気に話しつづけるクロメに，バツがたずねた。

  「もし石を左に投げた世界に留まって，右に投げた世界にしたい場合はどうすればいいの？」

  <br>
  <br>

  (c) 2018 jamcha (jamcha.aa@gmail.com).

  ![[https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png][cc by-nc-sa]]
